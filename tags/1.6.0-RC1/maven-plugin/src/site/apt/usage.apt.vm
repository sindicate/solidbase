~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~ http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.    
 
  ------
  Usage
  ------
  Ruud de Jong
  ------
  Jan 2010
  ------

Usage
 
  Brief examples on how to use the dependency goal.
 
* Generic Plugin configuration information

  See the following links for information about including and configuring plugins in your project:
  
  *{{{http://maven.apache.org/guides/mini/guide-configuring-plugins.html}Configuring Plugins}}
  
  *{{{http://maven.apache.org/guides/plugin/guide-java-plugin-development.html}Plugin Development}}

  *{{{http://maven.apache.org/guides/introduction/introduction-to-plugin-prefix-mapping.html}Plugin Prefix}}

* The <<<solidbase:upgrade>>> mojo

   This goal is meant to be bound to the lifecycle phase 'process-resources' and configured in your
   <<<pom.xml>>>. It will look for configuration settings.
   
   The params filename is optional. If not set, the plugin will fall back to the default.
   The plugin is able to detect whether the params file exists or not. If it is absent, the plugin skips the 
   generation of the traceability report.
   
   The driver is required. It is the name of the java database driver class.
   
   The (database) URL is required. It is used to connect to the database.
   
   The user is required. It is used in combination with the password to connect to the database.
   
   The password is required. It is used in combination with the user to connect to the database.
   
   The upgradefile is required. It is used as source file containing all the patches to apply.
   
   The target is required. It is the target version to patch the database to.

   Configure the plugin something like this:

+---+
<project>
  [...]
  <build>
    <plugins>
      <plugin>
        <groupId>solidbase.mojo</groupId>
        <artifactId>solidbase-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>process-resources</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
		  <driver>[ org.apache.derby.jdbc.EmbeddedDriver ]</driver>
		  <url>[ jdbc:derby:testant;create=true ]</url>
		  <user>[ app ]</user>
		  <password>[ ]</password>
		  <upgradefile>[ src/main/sql/upgrade-derby-example.sql ]</upgradefile>
		  <target>[ 1.0.* ]</target>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.4.2.0</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  [...]
</project>
+---+
  
  If you intend to configure this mojo for execution on the command line use:

+---+
mvn solidbase:upgrade
+---+
