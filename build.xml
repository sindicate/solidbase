<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
   Copyright 2006 René M. de Bloois

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project basedir="." name="solidbase">

	<!-- Property file -->

	<property file="build.properties" />

	<!-- Properties -->

	<property name="target-jre" value="1.5" />
	<property name="version.properties" value="ronnie/dbpatcher/config/version.properties" />
	<property name="release.number" value="1.0" />

	<!-- Source folders & files -->
	<property name="test.home" value="test" />
	<property name="test.lib.home" value="tools/test" />

	<!-- Product folders -->
	<property name="build.home" value="../BUILDS/solidbase" />
	<property name="temp.home" value="../TEMP/solidbase" />
	<property name="dist.home" value="${build.home}/dist" />


	<!-- Classpaths -->

	<path id="groovy.classpath">
		<fileset dir="tools/groovy" includes="*.jar" />
		<fileset dir="tools/svnkit" includes="*.jar" />
	</path>

	<path id="jarjar.classpath">
		<fileset dir="tools/jarjar" includes="*.jar" />
	</path>

	<path id="testng.classpath">
		<fileset dir="tools/test" includes="*.jar" />
	</path>

	<path id="xalan.classpath">
		<fileset dir="tools/xalan" includes="*.jar" />
	</path>

	<path id="fop.classpath">
		<fileset dir="tools/fop" includes="*.jar" />
	</path>

	<path id="jing.classpath">
		<fileset dir="tools/jing" includes="*.jar" />
	</path>

	<path id="compile.classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<path id="compiletest.classpath">
		<pathelement location="${build.home}/classes" />
		<path refid="testng.classpath" />
		<path refid="compile.classpath" />
	</path>

	<path id="test.classpath">
		<pathelement location="${build.home}/test" />
		<path refid="compiletest.classpath" />
		<fileset dir="${dist.home}" includes="*.jar" />
	</path>


	<!-- Custom Ant Task Definitions -->

	<taskdef resource="testngtasks" classpathref="testng.classpath" />
	<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="groovy.classpath" />
	<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="jarjar.classpath" />
	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop" classpathref="fop.classpath" />


	<!-- Default target -->

	<target name="none">
		<echo message="Use ant -p to see available targets" />
	</target>


	<!-- Targets -->

	<target name="clean" description="Cleans everything">
		<delete dir="${build.home}" />
		<delete dir="${temp.home}" />
	</target>


	<target name="compile">
		<echo message="java.home=${java.home}" />
		<mkdir dir="${build.home}/classes" />
		<javac srcdir="src" destdir="${build.home}/classes" source="${target-jre}" target="${target-jre}" optimize="true" debug="true" deprecation="true">
			<classpath refid="compile.classpath" />
		</javac>
	</target>


	<target name="compiletest" depends="compile">
		<mkdir dir="${build.home}/test" />
		<javac source="${target-jre}" target="${target-jre}" srcdir="${test.home}" destdir="${build.home}/test" debug="true" deprecation="true" optimize="true">
			<classpath refid="compiletest.classpath" />
		</javac>
	</target>


	<target name="buildtest" depends="compiletest">
		<copy preservelastmodified="true" todir="${build.home}/test">
			<fileset dir="${test.home}" excludes="**/*.java" />
		</copy>
	</target>


	<target name="test" depends="build,buildtest" description="Run all tests">
		<testng workingDir="${dist.home}" classpathref="test.classpath" outputDir="${build.home}/testreports" haltOnFailure="true" verbose="2">
			<jvmarg value="-javaagent:${basedir}/tools/test/jmockit.jar" />
			<jvmarg value="-Xmx256m" />
			<classfileset dir="${build.home}/test" />
			<reporter classname="ronnie.dbpatcher.test.TestListener"/>
		</testng>
	</target>


	<target name="jar" depends="compile" description="Create jar">
		<copy todir="${build.home}/classes" preservelastmodified="yes">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
		<groovy src="getsvninfo.groovy" />
		<echo file="${build.home}/classes/${version.properties}" message="module.version=${release.number}.${svn.revision}" />
		<mkdir dir="${build.home}/stage" />
		<jarjar compress="yes" destfile="${build.home}/stage/solidbase1.jar">
			<fileset dir="${build.home}/classes" />
			<keep pattern="ronnie.dbpatcher.Main" />
		</jarjar>
		<mkdir dir="${dist.home}" />
		<jarjar compress="yes" destfile="${dist.home}/solidbase.jar">
			<zipfileset src="${build.home}/stage/solidbase1.jar" />
			<zipfileset src="lib/commons-cli-1.2.jar" />
			<zipfileset src="lib/commons-collections-3.2.jar" excludes="META-INF/*.txt" />
			<zipfileset src="lib/commons-lang-2.3.jar" excludes="META-INF/*.txt" />
			<rule pattern="com.logicacmg.idt.commons.**" result="solidbase.@0" />
			<rule pattern="org.apache.commons.**" result="solidbase.@0" />
			<keep pattern="ronnie.dbpatcher.Main" />
			<manifest>
				<attribute name="Main-Class" value="ronnie.dbpatcher.Main" />
				<attribute name="Version" value="${release.number}.${svn.revision}" />
				<attribute name="Project-Name" value="${ant.project.name}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Target-JRE" value="${target-jre}" />
				<attribute name="SVN-url" value="${svn.url}" />
				<attribute name="SVN-revision" value="${svn.revision}" />
			</manifest>
		</jarjar>
	</target>


	<target name="build" depends="jar">
		<copy todir="${dist.home}" preservelastmodified="true">
			<fileset dir="dist" />
		</copy>
	</target>


	<target name="run" depends="build">
		<java jar="${dist.home}/solidbase.jar" fork="yes" dir="${dist.home}">
			<arg value="-fromant" />
			<!--
			<arg value="-driver" />
			<arg value="org.apache.derby.jdbc.EmbeddedDriver" />
			<arg value="-url" />
			<arg value="jdbc:derby:c:/projects/temp/solidbase/db;create=true" />
			<arg value="-user" />
			<arg value="app" />
			<arg value="-pass" />
			<arg value="" />
			-->
		</java>
	</target>


	<target name="checksvnstatus">
		<groovy src="checksvnstatus.groovy" />
	</target>


	<target name="dist" depends="checksvnstatus,clean,test,build" />


	<target name="javadoc" depends="compile" description="Generate Javadoc">
		<mkdir dir="dist/docs/api" />
		<javadoc sourcepath="src" destdir="dist/docs/api" packagenames="*" linkoffline="http://java.sun.com/j2se/1.5.0/docs/api doc/jdk1.5.0">
			<classpath refid="compile.classpath" />
		</javadoc>
	</target>


	<target name="manual">
		<echo message="NOTE: You can use 'ant -autoproxy &lt;target&gt;' when you have network problems" />
		<java jar="tools/jing/jing.jar" fork="true">
			<arg value="-t" />
			<arg value="-i" />
			<arg path="tools/docbook/docbook.rng" />
			<arg path="doc/manual.xml" />
		</java>
		<mkdir dir="${build.home}" />
		<mkdir dir="${dist.home}" />
		<xslt style="tools/docbook/xhtml/docbook.xsl" in="doc/manual.xml" out="${dist.home}/manual.html" classpathref="xalan.classpath" />
		<xslt style="tools/docbook/fo/docbook.xsl" in="doc/manual.xml" out="${build.home}/manual.fo" classpathref="xalan.classpath" />
		<fop format="application/pdf" fofile="${build.home}/manual.fo" outfile="${dist.home}/manual.pdf" />
	</target>


</project>
