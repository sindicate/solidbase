<?xml version="1.0" encoding="ISO-8859-1"?>

<project basedir="." name="dbpatcher">

	<!-- Property file -->

	<property file="build.properties" />

	<!-- Properties -->

	<property name="target-jre" value="1.5" />
	<property name="version.properties" value="ronnie/dbpatcher/config/version.properties" />
	<property name="release.number" value="1.0" />

	<!-- Source folders & files -->
	<property name="test.home" value="test" />
	<property name="test.lib.home" value="tools/test" />

	<!-- Product folders -->
	<property name="build.home" value="../BUILDS/dbpatcher" />
	<property name="temp.home" value="../TEMP/dbpatcher" />
	<property name="dist.home" value="${build.home}/dist" />

	
	<!-- Classpaths -->

	<path id="groovy.classpath">
		<fileset dir="tools/groovy" includes="*.jar" />
		<fileset dir="tools/svnkit" includes="*.jar" />
	</path>

	<path id="jarjar.classpath">
		<fileset dir="tools/jarjar" includes="*.jar" />
	</path>

	<path id="testng.classpath">
		<fileset dir="tools/test" includes="*.jar" />
	</path>

	<path id="compile.classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<path id="compiletest.classpath">
		<pathelement location="${build.home}/classes" />
		<path refid="testng.classpath" />
		<path refid="compile.classpath" />
	</path>

	<path id="test.classpath">
		<pathelement location="${build.home}/test" />
		<path refid="compiletest.classpath" />
		<fileset dir="${dist.home}" includes="*.jar" />
	</path>

	
	<!-- Custom Ant Task Definitions -->

	<taskdef resource="testngtasks" classpathref="testng.classpath" />
	<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="groovy.classpath" />
	<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="jarjar.classpath" />

	
	<!-- Default target -->

	<target name="none">
		<echo message="Use ant -p to see available targets" />
	</target>

	
	<!-- Targets -->

	<target name="clean" description="Cleans everything">
		<delete dir="${build.home}" />
		<delete dir="${temp.home}" />
	</target>

	
	<target name="compile">
		<echo message="java.home=${java.home}" />
		<mkdir dir="${build.home}/classes" />
		<javac srcdir="src" destdir="${build.home}/classes" source="${target-jre}" target="${target-jre}" optimize="true" debug="true" deprecation="true">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	
	<target name="compiletest" depends="compile">
		<mkdir dir="${build.home}/test" />
		<javac source="${target-jre}" target="${target-jre}" srcdir="${test.home}" destdir="${build.home}/test" debug="true" deprecation="true" optimize="true">
			<classpath refid="compiletest.classpath" />
		</javac>
	</target>

	
	<target name="buildtest" depends="compiletest">
		<copy preservelastmodified="true" todir="${build.home}/test">
			<fileset dir="${test.home}" excludes="**/*.java" />
		</copy>
	</target>

	
	<target name="test" depends="build,buildtest" description="Run all tests">
		<testng workingDir="${dist.home}" classpathref="test.classpath" outputDir="${build.home}/testreports" haltOnFailure="true" verbose="2">
			<classfileset dir="${build.home}/test" />
			<jvmarg value="-Xmx256m" />
		</testng>
	</target>

	
	<target name="jar" depends="compile" description="Create jar">
		<copy todir="${build.home}/classes" preservelastmodified="yes">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
		<groovy src="getsvninfo.groovy" />
		<echo file="${build.home}/classes/${version.properties}" message="module.version=${release.number}.${svn.revision}" />
		<mkdir dir="${dist.home}" />
		<jarjar compress="yes" destfile="${dist.home}/dbpatcher.jar">
			<fileset dir="${build.home}/classes" />
			<zipfileset src="lib/idt-commons-2.0.142.jar" excludes="**/*.sql" />
			<zipfileset src="lib/commons-cli-1.1.jar" excludes="META-INF/LICENSE.txt,META-INF/NOTICE.txt" />
			<zipfileset src="lib/commons-collections-3.2.jar" excludes="META-INF/LICENSE.txt,META-INF/NOTICE.txt" />
			<zipfileset src="lib/commons-lang-2.3.jar" />
			<rule pattern="com.logicacmg.idt.commons.**" result="dbpatcher.@0" />
			<rule pattern="org.apache.commons.**" result="dbpatcher.@0" />
			<keep pattern="ronnie.dbpatcher.Main" />
			<keep pattern="ronnie.dbpatcher.Boot" />
			<manifest>
				<attribute name="Main-Class" value="ronnie.dbpatcher.Main" />
				<attribute name="Version" value="${release.number}.${svn.revision}" />
				<attribute name="Project-Name" value="${ant.project.name}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Target-JRE" value="${target-jre}" />
				<attribute name="SVN-url" value="${svn.url}" />
				<attribute name="SVN-revision" value="${svn.revision}" />
			</manifest>
		</jarjar>
	</target>

	
	<target name="build" depends="jar">
		<copy todir="${dist.home}" preservelastmodified="true">
			<fileset dir="dist" />
		</copy>
	</target>

		
	<target name="run" depends="build">
		<java jar="${dist.home}/dbpatcher.jar" fork="yes" dir="${dist.home}">
			<arg value="-fromant" />
			<!--
			<arg value="-driver" />
			<arg value="org.apache.derby.jdbc.EmbeddedDriver" />
			<arg value="-url" />
			<arg value="jdbc:derby:c:/projects/temp/dbpatcher/db;create=true" />
			<arg value="-user" />
			<arg value="app" />
			<arg value="-pass" />
			<arg value="" />
			-->
		</java>
	</target>

	
	<target name="checksvnstatus">
		<groovy src="checksvnstatus.groovy" />
	</target>

	
	<target name="dist" depends="checksvnstatus,clean,test,build" />

	
	<target name="javadoc" depends="compile" description="Generate Javadoc">
		<mkdir dir="dist/docs/api" />
		<javadoc sourcepath="src" destdir="dist/docs/api" packagenames="*" linkoffline="http://java.sun.com/j2se/1.5.0/docs/api doc/jdk1.5.0">
			<classpath refid="compile.classpath" />
		</javadoc>
	</target>

	
</project>
