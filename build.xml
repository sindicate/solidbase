<?xml version="1.0" encoding="ISO-8859-1"?>

<project basedir="." name="dbpatcher">

	<property file="build.properties"/>
	<property name="version.properties" value="src/ronnie/dbpatcher/version.properties"/>

	<!-- Source folders & files -->
	<property name="test.home" value="test"/>
	<property name="test.lib.home" value="tools/testng"/>

	<!-- Product folders -->
	<property name="build.home" value="../BUILDS/dbpatcher/"/>
	<property name="temp.home" value="../TEMP/dbpatcher/"/>
	<property name="dist.home" value="${build.home}/dist"/>

	<!-- Classpaths -->

	<path id="compile.classpath">
		<fileset dir="lib" includes="*.jar"/>
	</path>
	
	<path id="compiletest.classpath">
		<pathelement location="${build.home}/classes"/>
		<path refid="compile.classpath"/>
		<fileset dir="${test.lib.home}" includes="*.jar"/>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.home}/test"/>
		<path refid="compiletest.classpath"/>
	</path>

	<!-- Custom Ant Task Definitions -->

	<taskdef resource="testngtasks" classpath="${test.lib.home}/testng-5.6-jdk15.jar"/> <!-- TestNG -->

	<target name="clean" description="Cleans everything">
		<delete dir="${build.home}"/>
		<delete dir="${temp.home}"/>
	</target>
	
	<target name="classes">
		<echo message="java.home=${java.home}"/>
		<mkdir dir="${build.home}/classes"/>
		<javac srcdir="src" destdir="${build.home}/classes" source="1.5" target="1.5" optimize="true" debug="true" deprecation="true">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>

	<target name="extractjars">
		<mkdir dir="${build.home}/classes"/>
		<unjar dest="${build.home}/classes">
			<fileset file="lib/idt-commons-*.jar"/>
			<patternset>
				<exclude name="com/logicacmg/idt/commons/cache/**"/>
				<exclude name="com/logicacmg/idt/commons/email/**"/>
				<exclude name="com/logicacmg/idt/commons/jdbc/**"/>
				<exclude name="com/logicacmg/idt/commons/business/**"/>
				<exclude name="com/logicacmg/idt/commons/servlet/**"/>
				<exclude name="com/logicacmg/idt/commons/spring/**"/>
				<exclude name="com/logicacmg/idt/commons/tomcat5/**"/>
				<exclude name="com/logicacmg/idt/commons/xml/**"/>
			</patternset>
		</unjar>
		<unjar dest="${build.home}/classes">
			<fileset file="lib/commons-collections-*.jar"/>
			<patternset>
				<include name="org/apache/commons/collections/Factory.class"/>
				<include name="org/apache/commons/collections/FunctorException.class"/>
				<include name="org/apache/commons/collections/MultiMap.class"/>
				<include name="org/apache/commons/collections/map/AbstractMapDecorator.class"/>
				<include name="org/apache/commons/collections/map/MultiValueMap*.class"/>
			</patternset>
		</unjar>
	</target>

	<target name="jar" depends="classes,extractjars" description="Create jar">
		<mkdir dir="${dist.home}"/>
		<jar destfile="${dist.home}/dbpatcher.jar" compress="true">
			<fileset dir="${build.home}/classes" includes="**/*.class"/>
			<fileset dir="src" includes="**/*.sql,**/*.properties"/>
			<manifest>
				<attribute name="Main-Class" value="ronnie.dbpatcher.Boot"/>
				<attribute name="Version" value="${module.version}"/>
			</manifest>
		</jar>
		<!--
		<java jar="lib/proguard-3.6.jar" fork="true">
			<arg value="@proguard.pro"/>
		</java>
		-->
	</target>
	
	<target name="build" depends="jar">
		<copy todir="${dist.home}" preservelastmodified="true">
			<fileset dir="lib" includes="derby-*.jar,ojdbc*.jar"/>
			<fileset dir="" includes="dbpatcher.properties,dbpatch.sql"/>
		</copy>
	</target>

	<target name="compiletest" depends="classes">
		<mkdir dir="${build.home}/test"/>
		<javac source="1.5" target="1.5" srcdir="${test.home}" destdir="${build.home}/test" debug="true" deprecation="true" optimize="true">
			<classpath refid="compiletest.classpath"/>
		</javac>
	</target>

	<target name="buildtest" depends="build,compiletest">
		<copy preservelastmodified="true" todir="${build.home}/test">
			<fileset dir="${test.home}" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="test" depends="buildtest" description="Run all tests">
		<testng classpathref="test.classpath" outputDir="${build.home}/testreports" haltOnFailure="true" verbose="2">
			<xmlfileset file="${test.home}/test.xml"/>
			<jvmarg value="-Xmx256m"/>
		</testng>
	</target>

	<target name="dist" depends="clean,updateversion,test,build"/>

	<target name="javadoc" depends="classes" description="Generate Javadoc">
		<mkdir dir="dist/docs/api"/>
		<javadoc sourcepath="src" destdir="dist/docs/api" packagenames="*" linkoffline="http://java.sun.com/j2se/1.5.0/docs/api doc/jdk1.5.0">
			<classpath refid="compile.classpath"/>
		</javadoc>
	</target>

	<target name="updateversion">
		<!-- Revert the version.properties to prevent an M from being appended to the revision number. -->
		<exec executable="svn" dir="${basedir}"><arg line="revert ${version.properties}"/></exec>
		<!-- Update the properties file. -->
		<exec executable="svnversion" dir="${basedir}" output="${version.properties}"><arg line="-n ."/></exec>
		<!-- svnversion return either format nnnn:vvvv or vvvv, we just use the vvvv part. This part can have a trailing M or S for modified or switched. -->
		<replaceregexp file="${version.properties}" match="^(|[0-9]*:)([0-9]*[M|S]*)$" replace="module.version=1.0.\2" byline="false"/>
		<loadproperties srcFile="${version.properties}"/>
		<echo message="Version: ${module.version}"/>
	</target>
	
</project>
