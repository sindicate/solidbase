--* ENCODING "UTF-8"

--* // Copyright 2010 René M. de Bloois

--* // Licensed under the Apache License, Version 2.0 (the "License");
--* // you may not use this file except in compliance with the License.
--* // You may obtain a copy of the License at

--* //     http://www.apache.org/licenses/LICENSE-2.0

--* // Unless required by applicable law or agreed to in writing, software
--* // distributed under the License is distributed on an "AS IS" BASIS,
--* // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--* // See the License for the specific language governing permissions and
--* // limitations under the License.

--* // ========================================================================



--*	DEFINITION
--*		INIT "" --> "1.1"
--*		UPGRADE "" --> "1.0.1"
--*	/DEFINITION



--* // ========================================================================
--* INIT "" --> "1.1"
--* // ========================================================================

--* SET MESSAGE "    Creating table DBVERSION"

CREATE TABLE DBVERSION
(
	SPEC VARCHAR(5) NOT NULL,
	VERSION VARCHAR(20), 
	TARGET VARCHAR(20), 
	STATEMENTS DECIMAL(4) NOT NULL
)
GO

--* SET MESSAGE "    Creating table DBVERSIONLOG"

CREATE TABLE DBVERSIONLOG
(
	TYPE VARCHAR(1) NOT NULL,
	SOURCE VARCHAR(20),
	TARGET VARCHAR(20) NOT NULL,
	STATEMENT DECIMAL(4) NOT NULL,
	STAMP TIMESTAMP NOT NULL,
	COMMAND VARCHAR(4000),
	RESULT VARCHAR(4000)
)
GO

CREATE INDEX DBVERSIONLOG_INDEX1 ON DBVERSIONLOG ( TYPE, TARGET )
GO

--* /INIT



--* // ========================================================================
--* UPGRADE "" --> "1.0.1"
--* // ========================================================================

--* SET MESSAGE "    Creating tables"

CREATE TABLE USERS
(
	USERNAME VARCHAR(16) NOT NULL CONSTRAINT USERS_PK PRIMARY KEY,
	NAME VARCHAR(60) NOT NULL,
	PASSWORD VARCHAR(16),
	EMAIL VARCHAR(40)
)
GO

CREATE TABLE USER_ROLES
(
	USERNAME VARCHAR(16) NOT NULL,
	ROLENAME VARCHAR(16) NOT NULL, 
	PRIMARY KEY (USERNAME, ROLENAME)
)
GO

CREATE TABLE CLIENTS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	NAME VARCHAR(60) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE LOG
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	ACTION VARCHAR(1) NOT NULL,
	WHEN TIMESTAMP NOT NULL,
	WHO VARCHAR(16) NOT NULL,
	"TABLE" VARCHAR(16) NOT NULL,
	PK1 INTEGER NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE LOG_VALUES
(
	LOG INTEGER NOT NULL,
	"COLUMN" VARCHAR(16) NOT NULL,
	BEFORE_CHAR VARCHAR(1000),
	AFTER_CHAR VARCHAR(1000),
	BEFORE_NUM DECIMAL(30,8),
	AFTER_NUM DECIMAL(30,8),
	BEFORE_TIMESTAMP TIMESTAMP,
	AFTER_TIMESTAMP TIMESTAMP
)
GO

CREATE TABLE ATTENTIONS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	NOTE INTEGER NOT NULL,
	ASSIGNED_TO VARCHAR(16),
	DESCRIPTION VARCHAR(100) NOT NULL,
	TYPE VARCHAR(1) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE NOTES
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	REF INTEGER NOT NULL,
	CREATED_BY VARCHAR(16) NOT NULL,
	TIME_STAMP TIMESTAMP NOT NULL,
	NOTE VARCHAR(1000) NOT NULL,
	REF_TYPE VARCHAR(1) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE TASKS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	CLIENT INTEGER NOT NULL,
	ASSIGNEDUSER VARCHAR(16),
	NAME VARCHAR(60) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE ISSUES
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	CLIENT INTEGER NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	ESTIMATE DECIMAL(8,2),
	STATUS VARCHAR(5) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

CREATE TABLE ACTUALS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY,
	ISSUE INTEGER NOT NULL,
	DATE DATE NOT NULL,
	HOURS NUMERIC(4,2) NOT NULL,
	USERNAME VARCHAR(16) NOT NULL, 
	PRIMARY KEY (ID)
)
GO

--* SET MESSAGE "    Creating foreign keys"

ALTER TABLE USER_ROLES
ADD CONSTRAINT USRO_FK_USER FOREIGN KEY (USERNAME) 
REFERENCES USERS (USERNAME)
GO

ALTER TABLE LOG_VALUES
ADD CONSTRAINT LOGV_FK_LOG FOREIGN KEY (LOG) 
REFERENCES LOG (ID)
GO

ALTER TABLE ATTENTIONS
ADD CONSTRAINT ATTE_FK_NOTE FOREIGN KEY (NOTE) 
REFERENCES NOTES (ID)
GO

ALTER TABLE ATTENTIONS
ADD CONSTRAINT ATTE_FK_USER_ASSIGNED FOREIGN KEY (ASSIGNED_TO) 
REFERENCES USERS (USERNAME)
GO

ALTER TABLE NOTES
ADD CONSTRAINT NOTE_FK_USER_CREATED FOREIGN KEY (CREATED_BY) 
REFERENCES USERS (USERNAME)
GO

CREATE INDEX IE1_REF ON NOTES ( REF_TYPE, REF )
GO

ALTER TABLE TASKS
ADD CONSTRAINT TASK_FK_USER_ASSIGNED FOREIGN KEY (ASSIGNEDUSER) 
REFERENCES USERS (USERNAME)
GO

ALTER TABLE TASKS
ADD CONSTRAINT TASK_FK_CLIENT FOREIGN KEY (CLIENT) 
REFERENCES CLIENTS (ID)
GO

ALTER TABLE ISSUES
ADD CONSTRAINT ISSU_FK_CLIENT FOREIGN KEY (CLIENT) 
REFERENCES CLIENTS (ID)
GO

CREATE INDEX IE1_ISSUES ON ISSUES ( STATUS )
GO

ALTER TABLE ACTUALS
ADD CONSTRAINT ACTU_FK_ISSUE FOREIGN KEY (ISSUE) 
REFERENCES ISSUES (ID) ON DELETE CASCADE
GO

ALTER TABLE ACTUALS
ADD CONSTRAINT ACTU_FK_USER FOREIGN KEY (USERNAME) 
REFERENCES USERS (USERNAME)
GO

CREATE UNIQUE INDEX AK1_ACTUALS ON ACTUALS ( ISSUE, USERNAME, DATE )
GO

--* /UPGRADE



