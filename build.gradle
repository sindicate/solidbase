plugins {
	id "java"
	id "jacoco"
	id "com.github.johnrengelman.shadow" version "5.0.0"
}

repositories {
	jcenter()
}

println "Java version: ${JavaVersion.current()}"
if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    throw new GradleException("This build must be run with java 8")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	implementation(
		files("lib/solidstack.jar"),
		"commons-cli:commons-cli:1.2",
		"org.apache.commons:commons-lang3:3.4",
	)
	compileOnly(
//		"org.apache.maven:maven-plugin-api:2.0.8",
		"org.apache.maven:maven-core:2.0.8",
		"org.codehaus.groovy:groovy:1.5.7",
		"org.apache.ant:ant:1.7.1"
	)
	testImplementation(
		"org.testng:testng:6.14.3",
		"org.assertj:assertj-core:1.7.1",
		"org.jmockit:jmockit:1.42",
		"org.apache.ant:ant-testutil:1.7.1",
		"junit:junit:4.7",
		"org.slf4j:slf4j-api:1.7.2",
		"org.apache.commons:commons-io:1.3.2",
		"org.springframework:spring-beans:3.0.5.RELEASE",
		"org.springframework:spring-context:3.0.5.RELEASE",
		"org.springframework:spring-jdbc:3.0.5.RELEASE",
		"org.hsqldb:hsqldb:2.3.2",
		"org.apache.derby:derby:10.6.1.0",
		"org.apache.maven:maven-core:2.0.8"
	)
}

test {
	useTestNG() {
		useDefaultListeners = true
//		suites "src/test/suite.xml"
	}
	workingDir = "src/test/home"
	jvmArgs "-javaagent:${classpath.find{it.name.contains("jmockit")}.absolutePath}"
}

task deleteTmp(type: Delete) {
	delete "src/test/home/tmp"
}

clean.dependsOn deleteTmp

task coverage {
	dependsOn test, jacocoTestReport
}

shadowJar {
 	minimize()
	relocate "solidstack", "solidbase.solidstack"
	relocate "org.apache.commons", "solidbase.commons"
}

assemble.dependsOn shadowJar
